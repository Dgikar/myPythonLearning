"""
Обмен значений переменных
    Видео по теме: https://youtu.be/mt6lzWmaNRA
    Задачи: https://younglinux.info/store/store.html#!digiseller/detail/2882070

Обмен значений двух переменных - это действие, в результате которого одна переменная принимает значение, равное второй
переменной, а вторая - первой.

Три способа решения задачи на языке программирования Python

Если попытаться сделать такой обмен, сначала присвоив первой переменной значение второй, а второй - значение первой,
ничего не получится. Допустим, есть две переменные a и b. При этом a = 5 и b = 6. Если выполнить выражение a = b, то
переменная a будет хранить число 6, так же как и b. Число 5 будет утеряно. После этого выражение b = a теряет смысл, так
как b будет присвоено его же текущее значение. В данном случае 6.

Поэтому в программировании при обмене значений переменных обычно вводят третью, играющую роль буфера (буферная
переменная). В ней сохраняют значение первой переменной, потом первой присваивают значение второй, a новое значение для
второй берут из буфера.

Таким образом классический алгоритм обмена значений двух переменных выглядит так:
"""
print("\n------- первый вариант записи ---------")
a = 5
b = 6
print("Результат присвоения переменным: ", a, b)

buf = a
a = b
b = buf
print("Результат обмена переменных с использование третей переменной: ", a, b)

"""
Однако есть другой способ, позволяющий не использовать третью переменную, - арифметический. Он подходит только для чисел
"""
print("\n------- второй вариант записи ---------")
a = 15
b = 20
print("Результат присвоения переменным: ", a, b)
a = a + b   # 11
b = a - b   # 11-6=5
a = a - b   # 11-5=6
print("Результат обмена переменных с использование третей переменной: ", a, b)

print("\n------- третий вариант записи ---------")
# второй вариант записи:
a = 25
b = 30
print("Результат присвоения переменным: ", a, b)
a += b
b = a - b
a -= b
print("Результат второго варианта обмена переменных: ", a, b)

print("\n------- четвертый вариант записи ---------")
a, b = 7, 10
print("Результат присвоения переменным: ", a, b)
a, b = b, a
print("a, b = b, a: ", a, b)

"""
Почему такое возможно? В Питоне есть такая структура данных как кортеж.

При выполнении a, b = b, a интерпретатор Python сначала получает значения связанные с переменными b и a (правая часть)
и помещает их в кортеж, в данном случае получится (10, 20). После этого он связывает каждый элемент кортежа в
определенной позиции с переменными в той же позиции, но расположенными слева.

Таким образом можно поменять значения не только двух переменных, также трех и более. Кроме того в Python можно
обменивать значения переменных разных типов. Это связано с тем, что тип данных в Питоне привязан не к переменной,
а к значению:
    >>> a = 14
    >>> b = 18
    >>> c = 16
    >>> a,b,c = c,a,b
    >>> a,b,c
        (16, 14, 18)
    >>> d = 4.56
    >>> e = "hi"
    >>> d,e = e,d
    >>> d
        'hi'
    >>> e
        4.56
"""

"""
Дана дистанция - 600 км. Машина, кушает 8,5 л на 100 км. Цена литра бензина - 27,5 грн. Какая стоимость поездки?
"""
fuel_price = 27.5
fuel_usage = 8.5
distance = 300

trip_price = fuel_usage / 100 * fuel_price * distance * 2

print("Стоимость поездки туда и обратно =", trip_price, "грн.")
